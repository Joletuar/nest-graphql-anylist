# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""User schema"""
type UserSchema {
  """User id"""
  id: ID!

  """User fullName"""
  fullName: String!

  """User email"""
  email: String!

  """User roles"""
  roles: [Role!]!

  """Flag to indicate if the user is block or not"""
  isActive: Boolean!
}

"""User roles"""
enum Role {
  ADMIN
  GUEST
}

"""Schema items"""
type ItemSchema {
  """Item id"""
  id: ID!

  """Item name"""
  name: String!

  """Item quantity"""
  quantity: Int!

  """Item unit"""
  quantityUnits: Int!

  """User id who created the item"""
  userId: ID!
}

"""Pagination info"""
type PaginationSchema {
  """Current page number"""
  page: Int!

  """Number of items per page"""
  perPage: Int!

  """Total number of items"""
  total: Int!
}

"""Schema for querying items"""
type QueryItemSchema {
  """Item id"""
  id: ID!

  """Item name"""
  name: String!

  """Item quantity"""
  quantity: Int!

  """Item unit"""
  quantityUnits: Int!

  """User who owns the item"""
  user: UserSchema!
}

"""Paginated items"""
type PaginatedItemsSchema {
  """Items list"""
  items: [QueryItemSchema!]!

  """Pagination info"""
  pagination: PaginationSchema!
}

type Query {
  """Get an items list"""
  GetAllItems: [QueryItemSchema!]!

  """Find an item by id"""
  FindItemById(
    """Item id"""
    id: ID!
  ): QueryItemSchema!

  """Search items with filters, pagination and sort"""
  SearchItems(
    """Criteria to filter, paginate and sort"""
    criteria: CriteriaInput!
  ): PaginatedItemsSchema!

  """Get users list"""
  GetAllUsers: [UserSchema!]!

  """Find an user by id"""
  FindUserById(
    """User id"""
    id: ID!
  ): UserSchema!
}

"""Criteria to filter, paginate and sort"""
input CriteriaInput {
  """Filters to apply to the search"""
  filters: [FilterInput!]!

  """Pagination options"""
  pagination: PaginationInput!

  """Sort options"""
  sort: SortInput
}

"""Input type for filtering"""
input FilterInput {
  """Field to filter"""
  field: String!

  """Value to filter"""
  value: String!

  """Operator to use for filtering"""
  operator: FilterOperator!
}

"""Filter operator"""
enum FilterOperator {
  EQUAL
  NOT_EQUAL
  GREATER_THAN
  GREATER_THAN_OR_EQUAL
  LESS_THAN
  LESS_THAN_OR_EQUAL
  CONTAINS
}

"""Pagination input"""
input PaginationInput {
  page: Int = 1
  perPage: Int = 10
}

"""Sorting input"""
input SortInput {
  """Sort order (asc or desc)"""
  order: String!

  """Sort field"""
  field: String!
}

type Mutation {
  """Create new item"""
  CreateItem(
    """Args to create new Item"""
    input: CreateItemInput!
  ): ItemSchema!

  """Update an existing item"""
  UpdateItem(
    """Item id"""
    id: ID!

    """Input to update item"""
    input: UpdateItemInput!
  ): ItemSchema!

  """Create new user"""
  CreateUser(
    """Args to create new User"""
    input: CreateUserInput!
  ): UserSchema!

  """Update an existing user"""
  UpdateUser(
    """User id"""
    id: ID!

    """Input to update User"""
    input: UpdateUserInput!
  ): UserSchema!
}

"""Input to create new item"""
input CreateItemInput {
  """Item name"""
  name: String!

  """Item quantity"""
  quantity: Int!

  """Item quantityUnits"""
  quantityUnits: String!

  """Item userId"""
  userId: String!
}

"""Input to update an item"""
input UpdateItemInput {
  """Item name"""
  name: String

  """Item quantity"""
  quantity: Int

  """Item quantityUnits"""
  quantityUnits: String

  """Item userId"""
  userId: String
}

"""Input to create new user"""
input CreateUserInput {
  """User fullName"""
  fullName: String!

  """User email"""
  email: String!

  """User password"""
  password: String!

  """User roles"""
  roles: [Role!]!

  """Flag to indicate if the user is block or not"""
  isActive: Boolean!
}

"""Input to update an user"""
input UpdateUserInput {
  """User fullName"""
  fullName: String

  """User email"""
  email: String

  """User roles"""
  roles: [Role!]

  """Flag to indicate if the user is block or not"""
  isActive: Boolean
}